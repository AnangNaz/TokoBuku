
import java.awt.Image;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class User extends javax.swing.JFrame {

    Connection con;
    Statement stat;
    ResultSet rs;
    String sql;

    public User() {
        initComponents();
        database DB = new database();
        DB.config();
        con = DB.con;
        stat = DB.stm;
        tampildata();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    void tampildata() {
        // Pastikan tblData adalah objek JTable yang sudah ada
        DefaultTableModel tbl = new DefaultTableModel();

        // Menetapkan kolom untuk tabel
        tbl.addColumn("ID");
        tbl.addColumn("Judul Buku");
        tbl.addColumn("Author");
        tbl.addColumn("Harga");
        tbl.addColumn("Quantity");

        try {
            String sql = "SELECT * FROM buku";
            stat = con.createStatement();
            rs = stat.executeQuery(sql);

            // Mengosongkan tabel sebelum menampilkan data baru
            tbl.setRowCount(0); // Kosongkan model tabel

            while (rs.next()) {
                int id = rs.getInt("id");
                String judulBuku = rs.getString("judulBuku");
                String author = rs.getString("Author");
                int harga = rs.getInt("Harga");
                int quantity = rs.getInt("Quantity");

                // Menambahkan baris ke model tabel
                tbl.addRow(new Object[]{id, judulBuku, author, harga, quantity});
            }

            // Mengaitkan model dengan JTable
            tblData.setModel(tbl); // Pastikan tblData adalah objek JTable yang sudah ada
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayTotal = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        txtjudulBuku = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtHarga = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        Bcover = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        billData = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        displayTotal2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Bayar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        displayTotal.setBackground(new java.awt.Color(80, 12, 1));
        displayTotal.setkEndColor(new java.awt.Color(122, 183, 255));
        displayTotal.setkStartColor(new java.awt.Color(21, 83, 161));

        jLabel1.setText("Harga");

        txtjudulBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtjudulBukuActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Viner Hand ITC", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Viner Hand ITC", 0, 12)); // NOI18N
        jLabel5.setText("Iswa Book Store");

        jLabel2.setText("Author");

        txtHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHargaActionPerformed(evt);
            }
        });

        jLabel3.setText("Judul Buku");

        txtAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuthorActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantity");

        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "Judul Buku", "Author", "Harga", "Stock"
            }
        ));
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        Bcover.setText("Book Cover");

        jLabel6.setText("id");

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        billData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Judul Buku", "Author", "Harga", "Quantity"
            }
        ));
        billData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(billData);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Bill Anda");

        displayTotal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayTotal2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Total Tagihan Anda");

        Bayar.setText("Bayar");
        Bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BayarActionPerformed(evt);
            }
        });

        jButton1.setText("Tambahkan Ke Bill");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayTotalLayout = new javax.swing.GroupLayout(displayTotal);
        displayTotal.setLayout(displayTotalLayout);
        displayTotalLayout.setHorizontalGroup(
            displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayTotalLayout.createSequentialGroup()
                .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayTotalLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(165, 165, 165))
                    .addGroup(displayTotalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayTotalLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(displayTotalLayout.createSequentialGroup()
                                .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(displayTotalLayout.createSequentialGroup()
                                        .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(displayTotalLayout.createSequentialGroup()
                                                .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4))
                                            .addGroup(displayTotalLayout.createSequentialGroup()
                                                .addComponent(txtjudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(32, 32, 32)
                                                .addComponent(jLabel2)))
                                        .addGap(28, 28, 28)
                                        .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jButton1))
                                .addGap(28, 28, 28)
                                .addComponent(Bcover, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(displayTotalLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Bayar, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(displayTotal2))))))
                .addContainerGap())
            .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayTotalLayout.createSequentialGroup()
                    .addContainerGap(375, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addGap(308, 308, 308)))
        );
        displayTotalLayout.setVerticalGroup(
            displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtjudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(28, 28, 28)
                .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(460, 460, 460))
            .addGroup(displayTotalLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(displayTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(displayTotalLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGap(27, 27, 27)
                .addComponent(Bayar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(displayTotalLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(Bcover, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(displayTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayTotalLayout.createSequentialGroup()
                    .addContainerGap(284, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addGap(256, 256, 256)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtjudulBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtjudulBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtjudulBukuActionPerformed

    private void txtHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaActionPerformed

    private void txtAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAuthorActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void GetBookCover() {
        String sql = "SELECT Gambar FROM buku WHERE id = ?";
        PreparedStatement pst = null;
        ResultSet rs = null;

        try {
            pst = con.prepareStatement(sql);
            pst.setInt(1, Key);

            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imageBytes = rs.getBytes("Gambar");
                Bcover.setIcon(ResizeCover(null, imageBytes));
            } else {
                System.out.println("Data tidak ditemukan.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (pst != null) {
                    pst.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public ImageIcon ResizeCover(String ImagePath, byte[] pic) {
        ImageIcon MyImage = null;
        if (ImagePath != null) {
            MyImage = new ImageIcon(ImagePath);
        } else {
            MyImage = new ImageIcon(pic);
        }
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(Bcover.getWidth(), Bcover.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    int Key = 0;
    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        int baris = tblData.getSelectedRow();
        Key = Integer.parseInt(tblData.getValueAt(baris, 0).toString());
        if (baris != -1) {
            txtId.setText(tblData.getValueAt(baris, 0).toString());
            txtjudulBuku.setText(tblData.getValueAt(baris, 1).toString());
            txtAuthor.setText(tblData.getValueAt(baris, 2).toString());
            txtHarga.setText(tblData.getValueAt(baris, 3).toString());
            GetBookCover();
//        int baris = tblData.getSelectedRow();
//
//        if (baris != -1) { // Cek apakah baris valid
//            try {
//                // Mengonversi nilai dari kolom pertama ke integer
//                Key = Integer.parseInt(tblData.getValueAt(baris, 0).toString());
//            } catch (NumberFormatException e) {
//                System.out.println("Nilai di kolom pertama tidak valid: " + tblData.getValueAt(baris, 0));
//                return; // Keluar dari metode jika terjadi error
//            }
//
//            // Mengisi field dengan data dari tabel
//            txtid.setText(tblData.getValueAt(baris, 0).toString());
//            txtjudulBuku.setText(tblData.getValueAt(baris, 1).toString());
//            txtAuthor.setText(tblData.getValueAt(baris, 2).toString());
//            txtHarga.setText(tblData.getValueAt(baris, 3).toString());
//        } else {
//            System.out.println("Tidak ada baris yang dipilih.");
//        }
        }
    }//GEN-LAST:event_tblDataMouseClicked

    private int totalHargaKeseluruhan = 0;

    void billData() {
        if (txtjudulBuku.getText().isEmpty() || txtAuthor.getText().isEmpty()
                || txtHarga.getText().isEmpty() || txtQuantity.getText().isEmpty()
                || txtId.getText().isEmpty()) { // Validasi ID
            JOptionPane.showMessageDialog(null, "Semua field harus diisi.");
            return;
        }

        String judulBuku = txtjudulBuku.getText();
        String author = txtAuthor.getText();
        int harga;
        int quantity;

        String quantityText = txtQuantity.getText().trim();
        if (quantityText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Quantity harus diisi.");
            return;
        }

        // Validasi apakah quantityText hanya berisi angka
        if (!quantityText.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Quantity harus berupa angka.");
            return;
        }

        try {
            String hargaText = txtHarga.getText().trim();
            System.out.println("Value of txtHarga: " + hargaText);
            JOptionPane.showMessageDialog(null, "Value of txtHarga: " + hargaText);

            System.out.println("Value of txtQuantity: " + quantityText);
            JOptionPane.showMessageDialog(null, "Value of txtQuantity: " + quantityText);

            harga = Integer.parseInt(hargaText);
            quantity = Integer.parseInt(quantityText);

            System.out.println("Parsed harga: " + harga);
            System.out.println("Parsed quantity: " + quantity);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Harga dan Quantity harus berupa angka.");
            return;
        }

        DefaultTableModel billTableModel = (DefaultTableModel) billData.getModel();

        String inputId = txtId.getText();

        boolean bukuAda = false;
        int availableQuantity = 0;

        for (int i = 0; i < billTableModel.getRowCount(); i++) {
            String idBuku = (String) billTableModel.getValueAt(i, 0);
            if (idBuku != null && inputId != null && idBuku.equals(inputId)) {
                bukuAda = true;
                Object quantityObject = billTableModel.getValueAt(i, 4);


                System.out.println("Quantity Object: " + quantityObject + ", Type: " + quantityObject.getClass().getName());

                if (quantityObject instanceof Number) {
                    availableQuantity += ((Number) quantityObject).intValue();
                } else {
                    JOptionPane.showMessageDialog(null, "Data di kolom 3 bukan angka.");
                    return;
                }
                break;
            }
        }

        // Validasi quantity
        if (bukuAda && quantity > availableQuantity) {
            JOptionPane.showMessageDialog(null, "Jumlah quantity yang dimasukkan melebihi jumlah yang tersedia di tabel.");
            return;
        }

        System.out.println(availableQuantity);
        
        billTableModel.addRow(new Object[]{inputId, judulBuku, author, harga, quantity});

        txtjudulBuku.setText("");
        txtAuthor.setText("");
        txtHarga.setText("");
        txtQuantity.setText("");
        txtId.setText("");

        int totalPrice = quantity * harga;

        totalHargaKeseluruhan += totalPrice;

        displayTotal2.setText(String.valueOf(totalHargaKeseluruhan));

    }

    public String getDisplayTotal2Value() {
        return displayTotal2.getText();
    }

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void billDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billDataMouseClicked

    }//GEN-LAST:event_billDataMouseClicked

    private void displayTotal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayTotal2ActionPerformed

    }//GEN-LAST:event_displayTotal2ActionPerformed

    private void BayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BayarActionPerformed
        if (displayTotal2 == null || displayTotal2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Total belum terisi. Silakan hitung total terlebih dahulu.");
        } else {
            this.dispose();

        }

    }//GEN-LAST:event_BayarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        billData();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bayar;
    private javax.swing.JLabel Bcover;
    private javax.swing.JTable billData;
    private keeptoo.KGradientPanel displayTotal;
    private javax.swing.JTextField displayTotal2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtjudulBuku;
    // End of variables declaration//GEN-END:variables
}
